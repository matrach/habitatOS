# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-24 18:53
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BloodPressure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Datetime')),
                ('systolic', models.PositiveSmallIntegerField(default=None, help_text='mmHg', validators=[django.core.validators.MaxValueValidator(250), django.core.validators.MinValueValidator(0)], verbose_name='Blood Pressure Systolic')),
                ('diastolic', models.PositiveSmallIntegerField(default=None, help_text='mmHg', validators=[django.core.validators.MaxValueValidator(250), django.core.validators.MinValueValidator(0)], verbose_name='Blood Pressure Diastolic')),
                ('heart_rate', models.PositiveSmallIntegerField(default=None, help_text='bpm', validators=[django.core.validators.MaxValueValidator(250), django.core.validators.MinValueValidator(0)], verbose_name='Heart Rate')),
                ('astronaut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Astronaut')),
            ],
            options={
                'verbose_name': 'Blood Pressure Measurement',
                'verbose_name_plural': 'Blood Pressure Database',
                'ordering': ['-datetime'],
            },
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Start Datetime')),
                ('datetime_end', models.DateTimeField(default=None, verbose_name='End Datetime')),
                ('icd10', models.CharField(default=None, max_length=50, verbose_name='ICD-10')),
                ('sympthoms', models.TextField(default=None, verbose_name='Sympthoms')),
                ('astronaut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Astronaut')),
            ],
            options={
                'verbose_name': 'Disease Log',
                'verbose_name_plural': 'Disease Logbook',
                'ordering': ['-datetime_start'],
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Excretion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Intercourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Intoxication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Datetime')),
                ('food', models.TextField(blank=True, default=None, null=True, verbose_name='Food')),
                ('astronaut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Astronaut')),
            ],
            options={
                'verbose_name': 'Food Intake',
                'verbose_name_plural': 'Food Logbook',
                'ordering': ['-datetime'],
            },
        ),
        migrations.CreateModel(
            name='PulsOxymetry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Datetime')),
                ('spo2', models.PositiveSmallIntegerField(default=None, help_text='%', validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='SpO2')),
                ('perfusion_index', models.DecimalField(decimal_places=1, default=None, max_digits=3, validators=[django.core.validators.MaxValueValidator(22), django.core.validators.MinValueValidator(0)], verbose_name='Blood Perfusion Index')),
                ('heart_rate', models.PositiveSmallIntegerField(default=None, help_text='bpm', validators=[django.core.validators.MaxValueValidator(250), django.core.validators.MinValueValidator(0)], verbose_name='Heart Rate')),
                ('astronaut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Astronaut')),
            ],
            options={
                'verbose_name': 'Pulse Oxymetry Measurement',
                'verbose_name_plural': 'Pulse Oxymetry Database',
                'ordering': ['-datetime'],
            },
        ),
        migrations.CreateModel(
            name='Temperature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Datetime')),
                ('temperature', models.DecimalField(decimal_places=1, default=None, help_text='Celsius', max_digits=3, validators=[django.core.validators.MaxValueValidator(42), django.core.validators.MinValueValidator(30)], verbose_name='Temperature')),
                ('astronaut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Astronaut')),
            ],
            options={
                'verbose_name': 'Temperature Measurement',
                'verbose_name_plural': 'Temperature Database',
                'ordering': ['-datetime'],
            },
        ),
        migrations.CreateModel(
            name='Weight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Datetime')),
                ('weight', models.DecimalField(decimal_places=1, default=None, help_text='kg', max_digits=4, validators=[django.core.validators.MaxValueValidator(200), django.core.validators.MinValueValidator(0)], verbose_name='Weight')),
                ('BMI', models.DecimalField(blank=True, decimal_places=1, default=None, max_digits=3, null=True, validators=[django.core.validators.MaxValueValidator(40), django.core.validators.MinValueValidator(10)], verbose_name='BMI')),
                ('body_fat', models.DecimalField(blank=True, decimal_places=1, default=None, help_text='%', max_digits=3, null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='Body Fat')),
                ('lean_body_mass', models.DecimalField(blank=True, decimal_places=1, default=None, help_text='%', max_digits=4, null=True, validators=[django.core.validators.MaxValueValidator(200), django.core.validators.MinValueValidator(0)], verbose_name='Lean Body Mass')),
                ('body_water', models.DecimalField(blank=True, decimal_places=1, default=None, help_text='kg', max_digits=4, null=True, validators=[django.core.validators.MaxValueValidator(200), django.core.validators.MinValueValidator(0)], verbose_name='Body Water')),
                ('muscle_mass', models.DecimalField(blank=True, decimal_places=1, default=None, help_text='kg', max_digits=4, null=True, validators=[django.core.validators.MaxValueValidator(200), django.core.validators.MinValueValidator(0)], verbose_name='Muscle Mass')),
                ('daily_caloric_intake', models.PositiveIntegerField(blank=True, default=None, help_text='kcal', null=True, validators=[django.core.validators.MaxValueValidator(4000), django.core.validators.MinValueValidator(0)], verbose_name='Daily Caloric Intake')),
                ('bone_mass', models.DecimalField(blank=True, decimal_places=1, default=None, help_text='kg', max_digits=4, null=True, validators=[django.core.validators.MaxValueValidator(200), django.core.validators.MinValueValidator(0)], verbose_name='Bone Mass')),
                ('visceral_fat', models.PositiveSmallIntegerField(blank=True, default=None, null=True, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)], verbose_name='Visceral Fat')),
                ('astronaut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Astronaut')),
            ],
            options={
                'verbose_name': 'Weight Measurement',
                'verbose_name_plural': 'Weight Database',
                'ordering': ['-datetime'],
            },
        ),
    ]
